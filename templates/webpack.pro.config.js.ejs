const path = require('path')
const webpack  = require('webpack')
const HtmlWebpackPlugin = require('html-webpack-plugin');
const MiniCssExtractPlugin = require('mini-css-extract-plugin');
module.exports={
    optimization:{
        minimize: true,
        splitChunks:{
            automaticNameDelimiter: '~',
            cacheGroups:{
                commons:{
                    name:'commons',
                    chunks:'initial',
                    minChunks:2
                }
            }
        }
    },
    mode:'production',
    entry:<%_ if(type == 'typescript'){ %> './src/index.tsx', <%}else{%> './src/index.js',<%}%> 
    output:{
        filename:'[hash:8]-bundle.js',
        path:path.resolve(__dirname,'dist'),
        chunkFilename:'[name]-[hash:8].js',
        publicPath:'http://localhost:3000/'
    },
    module:{
        rules:[
            {
                test:<%_ if(type == 'typescript'){ %> /\.tsx?$/, <%}else{%> /\.js/,<%}%>
                exclude:/node_modules/,
                use:["babel-loader" <%if(type == 'typescript'){_%> ,"ts-loader" <%_}_%> ]
            },
            {
                test:/.less/,
                use:[MiniCssExtractPlugin.loader,"css-loader","less-loader"]
            }
        ]
    },
    resolve: {
        modules: [path.resolve(__dirname, "src/web_modules"), "node_modules"],
        alias:{
          "@type":path.resolve(__dirname,"src/@type")
        },
        extensions: ['.ts', '.tsx','.js', '.json'],
    },
    plugins:[
        new MiniCssExtractPlugin({
            filename: 'bundle-[name].css'
        }),
        new HtmlWebpackPlugin({
            filename:'index.html',
            template:'./index.ejs'
        })
    ]

}